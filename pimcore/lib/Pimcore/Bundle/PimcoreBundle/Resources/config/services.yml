services:
    pimcore.legacy_kernel:
        class: Pimcore\Bundle\PimcoreBundle\HttpKernel\LegacyKernel
        arguments: ['@kernel']

    pimcore.mvc_config_normalizer:
        class: Pimcore\Bundle\PimcoreBundle\Service\MvcConfigNormalizer
        arguments: ['@kernel']

    pimcore.router.dynamic_route_provider:
        class: Pimcore\Bundle\PimcoreBundle\Routing\DocumentRouteProvider
        arguments: ['@pimcore.service.document', '@pimcore.mvc_config_normalizer']

    pimcore.plugin_broker:
        class: Pimcore\API\Plugin\Broker

    pimcore.value_resolver.document:
        class: Pimcore\Bundle\PimcoreBundle\ArgumentResolver\DocumentValueResolver
        arguments: ['@pimcore.service.request.document_resolver']
        tags:
            - { name: controller.argument_value_resolver }

    pimcore.value_resolver.template_vars:
        class: Pimcore\Bundle\PimcoreBundle\ArgumentResolver\TemplateVarsValueResolver
        arguments: ['@pimcore.service.request.template_vars_resolver']
        tags:
            - { name: controller.argument_value_resolver }

    pimcore.zend_view_provider:
        class: Pimcore\Bundle\PimcoreBundle\View\ZendViewProvider
        arguments: ['@pimcore.legacy_kernel']

    # TODO inject user?
    pimcore.document_service:
        class: Pimcore\Model\Document\Service

    pimcore.service.request.editmode_resolver:
        class: Pimcore\Bundle\PimcoreBundle\Service\Request\EditmodeResolver
        arguments: ['@request_stack']

    pimcore.service.request.document_resolver:
        class: Pimcore\Bundle\PimcoreBundle\Service\Request\DocumentResolver
        arguments: ['@request_stack']

    pimcore.service.request.template_vars_resolver:
        class: Pimcore\Bundle\PimcoreBundle\Service\Request\TemplateVarsResolver
        arguments: ['@pimcore.service.request.document_resolver', '@pimcore.service.request.editmode_resolver']

    pimcore.service.document:
        class: Pimcore\Bundle\PimcoreBundle\Service\Document\DocumentService

    # simple services exposing get() API for documents, objects and assets
    # this is only necessary if loading objects directly with only access to the container, e.g. templates
    pimcore.service.asset:
        class: Pimcore\Bundle\PimcoreBundle\Service\Asset\AssetService

    pimcore.service.object:
        class: Pimcore\Bundle\PimcoreBundle\Service\Object\ObjectService

    pimcore.bundle_locator:
        class: Pimcore\Bundle\PimcoreBundle\HttpKernel\BundleLocator\BundleLocator
        arguments: ['@kernel']

    pimcore.web_path_resolver:
        class: Pimcore\Bundle\PimcoreBundle\Service\WebPathResolver

    pimcore.area.brick_manager:
        class: Pimcore\Document\Area\AreabrickManager

    pimcore.area.brick.templating_base:
        abstract: true
        arguments: ['@pimcore.bundle_locator']

    pimcore.document.tag.handler:
        class: Pimcore\Document\Tag\DelegatingTagHandler
        calls:
            - [addHandler, ['@pimcore.document.tag.handler.default']]

    pimcore.document.tag.handler.default:
        class: Pimcore\Document\Tag\TagHandler
        arguments:
            - '@pimcore.area.brick_manager'
            - '@templating'
            - '@pimcore.bundle_locator'
            - '@pimcore.web_path_resolver'
            - '@pimcore.templating.action_renderer'
